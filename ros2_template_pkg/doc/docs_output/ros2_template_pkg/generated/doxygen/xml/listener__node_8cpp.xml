<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="listener__node_8cpp" kind="file" language="C++">
    <compoundname>listener_node.cpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="yes">rclcpp/rclcpp.hpp</includes>
    <includes local="yes">std_msgs/msg/string.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="1">
        <label>src/listener_node.cpp</label>
        <link refid="listener__node_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>std_msgs/msg/string.hpp</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classMinimalSubscriber" prot="public">MinimalSubscriber</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="listener__node_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/listener_node.cpp" line="25" column="5" bodyfile="src/listener_node.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rclcpp/rclcpp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;std_msgs/msg/string.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::placeholders::_1;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classMinimalSubscriber" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMinimalSubscriber" kindref="compound">MinimalSubscriber</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>rclcpp::Node</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10" refid="classMinimalSubscriber_1acc0cfcf7e2c8f60e2faefd1c08e40135" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMinimalSubscriber_1acc0cfcf7e2c8f60e2faefd1c08e40135" kindref="member">MinimalSubscriber</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Node(</highlight><highlight class="stringliteral">&quot;minimal_subscriber&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMinimalSubscriber_1ac8c2cc8053f6e9c526c9ad5daad35ba7" kindref="member">subscription_</ref><sp/>=<sp/>this-&gt;create_subscription&lt;std_msgs::msg::String&gt;(</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;chat&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>std::bind(&amp;<ref refid="classMinimalSubscriber_1a5ded8a6bc4fd0e4232a3299994eb3b0a" kindref="member">MinimalSubscriber::topic_callback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18" refid="classMinimalSubscriber_1a5ded8a6bc4fd0e4232a3299994eb3b0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMinimalSubscriber_1a5ded8a6bc4fd0e4232a3299994eb3b0a" kindref="member">topic_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::msg::String<sp/>&amp;<sp/>msg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>heard:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>msg.data.c_str());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22" refid="classMinimalSubscriber_1ac8c2cc8053f6e9c526c9ad5daad35ba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rclcpp::Subscription&lt;std_msgs::msg::String&gt;::SharedPtr<sp/><ref refid="classMinimalSubscriber_1ac8c2cc8053f6e9c526c9ad5daad35ba7" kindref="member">subscription_</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="listener__node_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listener__node_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv[])</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>rclcpp::init(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>rclcpp::spin(std::make_shared&lt;MinimalSubscriber&gt;());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>rclcpp::shutdown();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/listener_node.cpp"/>
  </compounddef>
</doxygen>
